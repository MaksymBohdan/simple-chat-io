{"ast":null,"code":"import io from 'socket.io-client';\n\nconst chatInit = () => {\n  const socket = io.connect('http://localhost:8001');\n  clg;\n\n  function registerHandler(onMessageReceived) {\n    socket.on('message', onMessageReceived);\n  }\n\n  function unregisterHandler() {\n    socket.off('message');\n  }\n\n  socket.on('error', function (err) {\n    console.log('received socket error:');\n    console.log(err);\n  });\n\n  function register(name, cb) {\n    socket.emit('register', name, cb);\n  }\n\n  function join(chatRoomName, cb) {\n    socket.emit('join', chatRoomName, cb);\n  }\n\n  function leave(chatRoomName, cb) {\n    socket.emit('leave', chatRoomName, cb);\n  }\n\n  function message(chatRoomName, msg, cb) {\n    socket.emit('message', {\n      chatRoomName,\n      message: msg\n    }, cb);\n  }\n\n  function getChatrooms(cb) {\n    socket.emit('chatrooms', cb);\n  }\n\n  function getAvailableUsers(cb) {\n    socket.emit('availableUsers', cb);\n  }\n\n  const getAllUsers = cb => {\n    socket.emit('allUsers', cb);\n  };\n\n  return {\n    register,\n    join,\n    leave,\n    message,\n    getChatrooms,\n    getAvailableUsers,\n    registerHandler,\n    unregisterHandler,\n    getAllUsers\n  };\n};\n\nexport default chatInit;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/services/socket.js"],"names":["io","chatInit","socket","connect","clg","registerHandler","onMessageReceived","on","unregisterHandler","off","err","console","log","register","name","cb","emit","join","chatRoomName","leave","message","msg","getChatrooms","getAvailableUsers","getAllUsers"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,uBAAX,CAAf;AAEAC,EAAAA,GAAG;;AACH,WAASC,eAAT,CAAyBC,iBAAzB,EAA4C;AAC1CJ,IAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqBD,iBAArB;AACD;;AAED,WAASE,iBAAT,GAA6B;AAC3BN,IAAAA,MAAM,CAACO,GAAP,CAAW,SAAX;AACD;;AAEDP,EAAAA,MAAM,CAACK,EAAP,CAAU,OAAV,EAAmB,UAASG,GAAT,EAAc;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAHD;;AAKA,WAASG,QAAT,CAAkBC,IAAlB,EAAwBC,EAAxB,EAA4B;AAE1Bb,IAAAA,MAAM,CAACc,IAAP,CAAY,UAAZ,EAAwBF,IAAxB,EAA8BC,EAA9B;AACD;;AAED,WAASE,IAAT,CAAcC,YAAd,EAA4BH,EAA5B,EAAgC;AAC9Bb,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoBE,YAApB,EAAkCH,EAAlC;AACD;;AAED,WAASI,KAAT,CAAeD,YAAf,EAA6BH,EAA7B,EAAiC;AAC/Bb,IAAAA,MAAM,CAACc,IAAP,CAAY,OAAZ,EAAqBE,YAArB,EAAmCH,EAAnC;AACD;;AAED,WAASK,OAAT,CAAiBF,YAAjB,EAA+BG,GAA/B,EAAoCN,EAApC,EAAwC;AACtCb,IAAAA,MAAM,CAACc,IAAP,CAAY,SAAZ,EAAuB;AAAEE,MAAAA,YAAF;AAAgBE,MAAAA,OAAO,EAAEC;AAAzB,KAAvB,EAAuDN,EAAvD;AACD;;AAED,WAASO,YAAT,CAAsBP,EAAtB,EAA0B;AACxBb,IAAAA,MAAM,CAACc,IAAP,CAAY,WAAZ,EAAyBD,EAAzB;AACD;;AAED,WAASQ,iBAAT,CAA2BR,EAA3B,EAA+B;AAC7Bb,IAAAA,MAAM,CAACc,IAAP,CAAY,gBAAZ,EAA8BD,EAA9B;AACD;;AAED,QAAMS,WAAW,GAAGT,EAAE,IAAI;AACxBb,IAAAA,MAAM,CAACc,IAAP,CAAY,UAAZ,EAAwBD,EAAxB;AACD,GAFD;;AAIA,SAAO;AACLF,IAAAA,QADK;AAELI,IAAAA,IAFK;AAGLE,IAAAA,KAHK;AAILC,IAAAA,OAJK;AAKLE,IAAAA,YALK;AAMLC,IAAAA,iBANK;AAOLlB,IAAAA,eAPK;AAQLG,IAAAA,iBARK;AASLgB,IAAAA;AATK,GAAP;AAWD,CAzDD;;AA2DA,eAAevB,QAAf","sourcesContent":["import io from 'socket.io-client';\n\nconst chatInit = () => {\n  const socket = io.connect('http://localhost:8001');\n\n  clg\n  function registerHandler(onMessageReceived) {\n    socket.on('message', onMessageReceived);\n  }\n\n  function unregisterHandler() {\n    socket.off('message');\n  }\n\n  socket.on('error', function(err) {\n    console.log('received socket error:');\n    console.log(err);\n  });\n\n  function register(name, cb) {\n    \n    socket.emit('register', name, cb);\n  }\n\n  function join(chatRoomName, cb) {\n    socket.emit('join', chatRoomName, cb);\n  }\n\n  function leave(chatRoomName, cb) {\n    socket.emit('leave', chatRoomName, cb);\n  }\n\n  function message(chatRoomName, msg, cb) {\n    socket.emit('message', { chatRoomName, message: msg }, cb);\n  }\n\n  function getChatrooms(cb) {\n    socket.emit('chatrooms', cb);\n  }\n\n  function getAvailableUsers(cb) {\n    socket.emit('availableUsers', cb);\n  }\n\n  const getAllUsers = cb => {\n    socket.emit('allUsers', cb);\n  };\n\n  return {\n    register,\n    join,\n    leave,\n    message,\n    getChatrooms,\n    getAvailableUsers,\n    registerHandler,\n    unregisterHandler,\n    getAllUsers\n  };\n};\n\nexport default chatInit;\n"]},"metadata":{},"sourceType":"module"}