{"ast":null,"code":"var _jsxFileName = \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport MainLayout from './MainLayout/MainLayout';\nimport Users from './Users/UserContainer';\nimport ChatroomList from './Chatrooms/ChatroomList';\nimport Dialog from './Dialog/Dialog';\nimport chatInit from '../services/socket';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      chatrooms: [],\n      client: chatInit()\n    };\n\n    this.handleFetchChoosenUser = userName => {\n      const register = this.state.client.register;\n      const history = this.props.history;\n      register(userName, (err, user) => {\n        if (err) return this.setState({\n          user: null\n        });\n        this.setState({\n          user\n        });\n        history.push('/');\n      });\n    };\n\n    this.handleFetchAllChatrooms = () => {\n      const _chatInit = chatInit(),\n            getAllChatrooms = _chatInit.getAllChatrooms;\n\n      getAllChatrooms((err, chatrooms) => {\n        if (err) return this.setState({\n          chatrooms: []\n        });\n        this.setState({\n          chatrooms\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleFetchAllChatrooms();\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          chatrooms = _this$state.chatrooms;\n    return React.createElement(MainLayout, {\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/chatroom/:roomname\",\n      render: props => React.createElement(Dialog, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(ChatroomList, {\n        chatrooms: chatrooms,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      render: props => React.createElement(Users, Object.assign({\n        fetchUser: this.handleFetchChoosenUser\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/components/App.js"],"names":["React","Component","Route","Switch","MainLayout","Users","ChatroomList","Dialog","chatInit","App","state","user","chatrooms","client","handleFetchChoosenUser","userName","register","history","props","err","setState","push","handleFetchAllChatrooms","getAllChatrooms","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;;AAEA,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BS,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,SAAS,EAAE,EAFL;AAGNC,MAAAA,MAAM,EAAEL,QAAQ;AAHV,KADkB;;AAAA,SAW1BM,sBAX0B,GAWDC,QAAQ,IAAI;AAAA,YAC3BC,QAD2B,GACd,KAAKN,KAAL,CAAWG,MADG,CAC3BG,QAD2B;AAAA,YAE3BC,OAF2B,GAEf,KAAKC,KAFU,CAE3BD,OAF2B;AAInCD,MAAAA,QAAQ,CAACD,QAAD,EAAW,CAACI,GAAD,EAAMR,IAAN,KAAe;AAChC,YAAIQ,GAAJ,EAAS,OAAO,KAAKC,QAAL,CAAc;AAAET,UAAAA,IAAI,EAAE;AAAR,SAAd,CAAP;AAET,aAAKS,QAAL,CAAc;AAAET,UAAAA;AAAF,SAAd;AAEAM,QAAAA,OAAO,CAACI,IAAR,CAAa,GAAb;AACD,OANO,CAAR;AAOD,KAtByB;;AAAA,SAwB1BC,uBAxB0B,GAwBA,MAAM;AAAA,wBACFd,QAAQ,EADN;AAAA,YACtBe,eADsB,aACtBA,eADsB;;AAG9BA,MAAAA,eAAe,CAAC,CAACJ,GAAD,EAAMP,SAAN,KAAoB;AAClC,YAAIO,GAAJ,EAAS,OAAO,KAAKC,QAAL,CAAc;AAAER,UAAAA,SAAS,EAAE;AAAb,SAAd,CAAP;AAET,aAAKQ,QAAL,CAAc;AAAER,UAAAA;AAAF,SAAd;AACD,OAJc,CAAf;AAKD,KAhCyB;AAAA;;AAO1BY,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,uBAAL;AACD;;AAyBDG,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKf,KAD1B;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,SADP,eACOA,SADP;AAGP,WACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAED,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,qBAAZ;AAAkC,MAAA,MAAM,EAAEO,KAAK,IAAI,oBAAC,MAAD,oBAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,MAAM,EAAE,MAAM,oBAAC,YAAD;AAAc,QAAA,SAAS,EAAEN,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAEM,KAAK,IAAI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKJ;AAAvB,SAAmDI,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA9CyB;;AAiD5B,eAAeT,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport MainLayout from './MainLayout/MainLayout';\nimport Users from './Users/UserContainer';\nimport ChatroomList from './Chatrooms/ChatroomList';\nimport Dialog from './Dialog/Dialog';\n\nimport chatInit from '../services/socket';\n\nclass App extends Component {\n  state = {\n    user: null,\n    chatrooms: [],\n    client: chatInit()\n  };\n\n  componentDidMount() {\n    this.handleFetchAllChatrooms();\n  }\n\n  handleFetchChoosenUser = userName => {\n    const { register } = this.state.client;\n    const { history } = this.props;\n\n    register(userName, (err, user) => {\n      if (err) return this.setState({ user: null });\n\n      this.setState({ user });\n\n      history.push('/');\n    });\n  };\n\n  handleFetchAllChatrooms = () => {\n    const { getAllChatrooms } = chatInit();\n\n    getAllChatrooms((err, chatrooms) => {\n      if (err) return this.setState({ chatrooms: [] });\n\n      this.setState({ chatrooms });\n    });\n  };\n\n  render() {\n    const { user, chatrooms } = this.state;\n\n    return (\n      <MainLayout user={user}>\n        {/* <Switch> */}\n        <Route path='/chatroom/:roomname' render={props => <Dialog {...props} />} />\n        <Route path='/' render={() => <ChatroomList chatrooms={chatrooms} />} />\n        {/* </Switch> */}\n        <Route path='/users' render={props => <Users fetchUser={this.handleFetchChoosenUser} {...props} />} />\n      </MainLayout>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}