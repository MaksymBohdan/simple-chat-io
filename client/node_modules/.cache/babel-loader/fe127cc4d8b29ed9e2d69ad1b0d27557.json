{"ast":null,"code":"import io from 'socket.io-client';\n\nconst chatInit = () => {\n  const socket = io.connect('http://localhost:8001');\n  socket.on('connection', socket => {\n    console.log('connection ');\n  });\n\n  function registerHandler(onMessageReceived) {\n    socket.on('message', onMessageReceived);\n  }\n\n  function unregisterHandler() {\n    socket.off('message');\n  }\n\n  socket.on('error', function (err) {\n    console.log('received socket error:');\n    console.log(err);\n  });\n\n  function register(name, cb) {\n    socket.emit('register', name, cb);\n  }\n\n  function join(chatRoomName, cb) {\n    socket.emit('join', chatRoomName, cb);\n  }\n\n  function leave(chatRoomName, cb) {\n    socket.emit('leave', chatRoomName, cb);\n  }\n\n  function message(chatRoomName, msg, cb) {\n    socket.emit('message', {\n      chatRoomName,\n      message: msg\n    }, cb);\n  }\n\n  function getChatrooms(cb) {\n    socket.emit('chatrooms', cb);\n  }\n\n  function getAvailableUsers(cb) {\n    socket.emit('availableUsers', cb);\n  }\n\n  const getAllUsers = cb => {\n    console.log(cb);\n    socket.emit('allUsers', cb);\n  };\n\n  return {\n    register,\n    join,\n    leave,\n    message,\n    getChatrooms,\n    getAvailableUsers,\n    registerHandler,\n    unregisterHandler,\n    getAllUsers\n  };\n};\n\nexport default chatInit;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/services/socket.js"],"names":["io","chatInit","socket","connect","on","console","log","registerHandler","onMessageReceived","unregisterHandler","off","err","register","name","cb","emit","join","chatRoomName","leave","message","msg","getChatrooms","getAvailableUsers","getAllUsers"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAW,uBAAX,CAAf;AAEAD,EAAAA,MAAM,CAACE,EAAP,CAAU,YAAV,EAAwBF,MAAM,IAAI;AAChCG,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAFD;;AAIA,WAASC,eAAT,CAAyBC,iBAAzB,EAA4C;AAC1CN,IAAAA,MAAM,CAACE,EAAP,CAAU,SAAV,EAAqBI,iBAArB;AACD;;AAED,WAASC,iBAAT,GAA6B;AAC3BP,IAAAA,MAAM,CAACQ,GAAP,CAAW,SAAX;AACD;;AAEDR,EAAAA,MAAM,CAACE,EAAP,CAAU,OAAV,EAAmB,UAASO,GAAT,EAAc;AAC/BN,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYK,GAAZ;AACD,GAHD;;AAKA,WAASC,QAAT,CAAkBC,IAAlB,EAAwBC,EAAxB,EAA4B;AAC1BZ,IAAAA,MAAM,CAACa,IAAP,CAAY,UAAZ,EAAwBF,IAAxB,EAA8BC,EAA9B;AACD;;AAED,WAASE,IAAT,CAAcC,YAAd,EAA4BH,EAA5B,EAAgC;AAC9BZ,IAAAA,MAAM,CAACa,IAAP,CAAY,MAAZ,EAAoBE,YAApB,EAAkCH,EAAlC;AACD;;AAED,WAASI,KAAT,CAAeD,YAAf,EAA6BH,EAA7B,EAAiC;AAC/BZ,IAAAA,MAAM,CAACa,IAAP,CAAY,OAAZ,EAAqBE,YAArB,EAAmCH,EAAnC;AACD;;AAED,WAASK,OAAT,CAAiBF,YAAjB,EAA+BG,GAA/B,EAAoCN,EAApC,EAAwC;AACtCZ,IAAAA,MAAM,CAACa,IAAP,CAAY,SAAZ,EAAuB;AAAEE,MAAAA,YAAF;AAAgBE,MAAAA,OAAO,EAAEC;AAAzB,KAAvB,EAAuDN,EAAvD;AACD;;AAED,WAASO,YAAT,CAAsBP,EAAtB,EAA0B;AACxBZ,IAAAA,MAAM,CAACa,IAAP,CAAY,WAAZ,EAAyBD,EAAzB;AACD;;AAED,WAASQ,iBAAT,CAA2BR,EAA3B,EAA+B;AAC7BZ,IAAAA,MAAM,CAACa,IAAP,CAAY,gBAAZ,EAA8BD,EAA9B;AACD;;AAED,QAAMS,WAAW,GAAGT,EAAE,IAAI;AACxBT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,EAAZ;AAEAZ,IAAAA,MAAM,CAACa,IAAP,CAAY,UAAZ,EAAwBD,EAAxB;AACD,GAJD;;AAMA,SAAO;AACLF,IAAAA,QADK;AAELI,IAAAA,IAFK;AAGLE,IAAAA,KAHK;AAILC,IAAAA,OAJK;AAKLE,IAAAA,YALK;AAMLC,IAAAA,iBANK;AAOLf,IAAAA,eAPK;AAQLE,IAAAA,iBARK;AASLc,IAAAA;AATK,GAAP;AAWD,CA7DD;;AA+DA,eAAetB,QAAf","sourcesContent":["import io from 'socket.io-client';\n\nconst chatInit = () => {\n  const socket = io.connect('http://localhost:8001');\n\n  socket.on('connection', socket => {\n    console.log('connection ');\n  })\n\n  function registerHandler(onMessageReceived) {\n    socket.on('message', onMessageReceived);\n  }\n\n  function unregisterHandler() {\n    socket.off('message');\n  }\n\n  socket.on('error', function(err) {\n    console.log('received socket error:');\n    console.log(err);\n  });\n\n  function register(name, cb) {\n    socket.emit('register', name, cb);\n  }\n\n  function join(chatRoomName, cb) {\n    socket.emit('join', chatRoomName, cb);\n  }\n\n  function leave(chatRoomName, cb) {\n    socket.emit('leave', chatRoomName, cb);\n  }\n\n  function message(chatRoomName, msg, cb) {\n    socket.emit('message', { chatRoomName, message: msg }, cb);\n  }\n\n  function getChatrooms(cb) {\n    socket.emit('chatrooms', cb);\n  }\n\n  function getAvailableUsers(cb) {\n    socket.emit('availableUsers', cb);\n  }\n\n  const getAllUsers = cb => {\n    console.log(cb);\n\n    socket.emit('allUsers', cb);\n  };\n\n  return {\n    register,\n    join,\n    leave,\n    message,\n    getChatrooms,\n    getAvailableUsers,\n    registerHandler,\n    unregisterHandler,\n    getAllUsers\n  };\n};\n\nexport default chatInit;\n"]},"metadata":{},"sourceType":"module"}