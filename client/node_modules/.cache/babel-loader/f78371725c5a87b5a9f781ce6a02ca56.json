{"ast":null,"code":"var _jsxFileName = \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/src/components/Chat/Chat.js\";\nimport React, { Component } from 'react';\nimport { ChatWrapper, MessageArea } from './styles';\nimport chatInit from '../../services/socket';\n\nclass Chat extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chatHistory: [],\n      message: ''\n    };\n\n    this.onMessageReceived = message => this.setState(prev => ({\n      chatHistory: [...prev.chatHistory, message]\n    }));\n\n    this.onMessageChange = e => this.setState({\n      message: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    const _chatInit = chatInit(),\n          chatConnectionHandler = _chatInit.chatConnectionHandler;\n\n    chatConnectionHandler(this.onMessageReceived);\n  }\n\n  render() {\n    const history = this.props.history;\n    const message = this.state.message;\n    return React.createElement(ChatWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"dialog\"), React.createElement(\"p\", {\n      onClick: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"back\"), React.createElement(MessageArea, {\n      rows: \"1\",\n      onChange: this.onMessageChange,\n      value: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" send message \"));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/components/Chat/Chat.js"],"names":["React","Component","ChatWrapper","MessageArea","chatInit","Chat","state","chatHistory","message","onMessageReceived","setState","prev","onMessageChange","e","target","value","componentDidMount","chatConnectionHandler","render","history","props","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,OAAO,EAAE;AAFH,KADmB;;AAAA,SAW3BC,iBAX2B,GAWPD,OAAO,IAAI,KAAKE,QAAL,CAAcC,IAAI,KAAK;AAAEJ,MAAAA,WAAW,EAAE,CAAC,GAAGI,IAAI,CAACJ,WAAT,EAAsBC,OAAtB;AAAf,KAAL,CAAlB,CAXJ;;AAAA,SAa3BI,eAb2B,GAaTC,CAAC,IAAI,KAAKH,QAAL,CAAc;AAAEF,MAAAA,OAAO,EAAEK,CAAC,CAACC,MAAF,CAASC;AAApB,KAAd,CAbI;AAAA;;AAM3BC,EAAAA,iBAAiB,GAAG;AAAA,sBACgBZ,QAAQ,EADxB;AAAA,UACVa,qBADU,aACVA,qBADU;;AAElBA,IAAAA,qBAAqB,CAAC,KAAKR,iBAAN,CAArB;AACD;;AAMDS,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,UAECX,OAFD,GAEa,KAAKF,KAFlB,CAECE,OAFD;AAIP,WACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,MAAA,OAAO,EAAE,MAAMW,OAAO,CAACE,IAAR,CAAa,GAAb,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,QAAQ,EAAE,KAAKT,eAArC;AAAsD,MAAA,KAAK,EAAEJ,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,CADF;AASD;;AA5B0B;;AA+B7B,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ChatWrapper, MessageArea } from './styles';\n\nimport chatInit from '../../services/socket';\n\nclass Chat extends Component {\n  state = {\n    chatHistory: [],\n    message: ''\n  };\n\n  componentDidMount() {\n    const { chatConnectionHandler } = chatInit();\n    chatConnectionHandler(this.onMessageReceived);\n  }\n\n  onMessageReceived = message => this.setState(prev => ({ chatHistory: [...prev.chatHistory, message] }));\n\n  onMessageChange = e => this.setState({ message: e.target.value });\n\n  render() {\n    const { history } = this.props;\n    const { message } = this.state;\n\n    return (\n      <ChatWrapper>\n        <h1>dialog</h1>\n        <p onClick={() => history.push('/')}>back</p>\n\n        <MessageArea rows='1' onChange={this.onMessageChange} value={message} />\n        <button type='button'> send message </button>\n      </ChatWrapper>\n    );\n  }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}