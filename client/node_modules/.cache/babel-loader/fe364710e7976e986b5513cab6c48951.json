{"ast":null,"code":"var _jsxFileName = \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Main from './Main/Main';\nimport Users from './Users/UserContainer';\nimport chatInit from '../services/socket';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      isRegistrationInProcess: false,\n      client: chatInit()\n    };\n\n    this.handleUserRegistration = userName => {\n      const register = this.state.client.register;\n      this.setState({\n        isRegistrationInProcess: true\n      });\n      register(userName, (err, user) => {\n        if (err) return this.setState({\n          user: null\n        });\n        this.setState({\n          isRegistrationInProcess: false,\n          user\n        });\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          client = _this$state.client;\n    return React.createElement(React.Fragment, null, React.createElement(Route, {\n      path: \"/\",\n      render: props => React.createElement(Main, Object.assign({\n        user: user\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      render: props => React.createElement(Users, Object.assign({\n        getAllUsers: client.getAllUsers,\n        register: this.handleUserRegistration\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/components/App.js"],"names":["React","Component","Route","Switch","Main","Users","chatInit","App","state","user","isRegistrationInProcess","client","handleUserRegistration","userName","register","setState","err","render","props","getAllUsers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,uBAAuB,EAAE,KAFnB;AAGNC,MAAAA,MAAM,EAAEL,QAAQ;AAHV,KADkB;;AAAA,SAO1BM,sBAP0B,GAODC,QAAQ,IAAI;AAAA,YAC3BC,QAD2B,GACd,KAAKN,KAAL,CAAWG,MADG,CAC3BG,QAD2B;AAGnC,WAAKC,QAAL,CAAc;AACZL,QAAAA,uBAAuB,EAAE;AADb,OAAd;AAIAI,MAAAA,QAAQ,CAACD,QAAD,EAAW,CAACG,GAAD,EAAMP,IAAN,KAAe;AAChC,YAAIO,GAAJ,EAAS,OAAO,KAAKD,QAAL,CAAc;AAAEN,UAAAA,IAAI,EAAE;AAAR,SAAd,CAAP;AAET,aAAKM,QAAL,CAAc;AACZL,UAAAA,uBAAuB,EAAE,KADb;AAEZD,UAAAA;AAFY,SAAd;AAID,OAPO,CAAR;AAQD,KAtByB;AAAA;;AAwB1BQ,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKT,KADvB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOE,MADP,eACOA,MADP;AAGP,WACE,0CACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,MAAM,EAAEO,KAAK,IAAI,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAET;AAAZ,SAAsBS,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,MAAM,EAAEA,KAAK,IAAI,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAEP,MAAM,CAACQ,WAA3B;AAAwC,QAAA,QAAQ,EAAE,KAAKP;AAAvD,SAAmFM,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAYD;;AAvCyB;;AA0C5B,eAAeX,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Main from './Main/Main';\nimport Users from './Users/UserContainer';\n\nimport chatInit from '../services/socket';\n\nclass App extends Component {\n  state = {\n    user: null,\n    isRegistrationInProcess: false,\n    client: chatInit()\n  };\n\n  handleUserRegistration = userName => {\n    const { register } = this.state.client;\n\n    this.setState({\n      isRegistrationInProcess: true\n    });\n\n    register(userName, (err, user) => {\n      if (err) return this.setState({ user: null });\n\n      this.setState({\n        isRegistrationInProcess: false,\n        user\n      });\n    });\n  };\n\n  render() {\n    const { user, client } = this.state;\n\n    return (\n      <>\n        <Route path='/' render={props => <Main user={user} {...props} > \n        \n        </Main>} />\n\n        <Route\n          path='/users'\n          render={props => <Users getAllUsers={client.getAllUsers} register={this.handleUserRegistration} {...props} />}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}