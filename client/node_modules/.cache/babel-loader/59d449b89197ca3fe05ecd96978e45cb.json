{"ast":null,"code":"var _jsxFileName = \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Logo from './Logo/Logo';\nimport Users from './Users/UserContainer';\nimport chatInit from '../services/socket';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      users: [],\n      isRegistrationInProcess: false\n    };\n\n    this.setCurrentUser = id => {\n      const users = this.state.users;\n      this.setState({\n        user: users.filter(user => user.id === id)\n      });\n    };\n\n    this.renderUserListOrRedirect = userList => {\n      if (this.state.users) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      }\n\n      return isRegistrationInProcess ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"LOADING\") : renderUserSelection();\n    };\n  }\n\n  componentDidMount() {\n    const _chatInit = chatInit(),\n          getAllUsers = _chatInit.getAllUsers;\n\n    getAllUsers((err, users) => {\n      this.setState({\n        users: users\n      });\n    });\n  }\n\n  renderUserSelectionOrRedirect(renderUserSelection) {\n    if (this.state.user) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n\n    return this.state.isRegisterInProcess ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" LOADING\") : renderUserSelection();\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          users = _this$state.users;\n    return React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(Logo, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      render: () => React.createElement(Users, {\n        users: users,\n        setCurrentUser: this.setCurrentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/components/App.js"],"names":["React","Component","Route","Switch","Redirect","Logo","Users","chatInit","App","state","user","users","isRegistrationInProcess","setCurrentUser","id","setState","filter","renderUserListOrRedirect","userList","renderUserSelection","componentDidMount","getAllUsers","err","renderUserSelectionOrRedirect","isRegisterInProcess","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBP,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BQ,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,uBAAuB,EAAE;AAHnB,KADkB;;AAAA,SAe1BC,cAf0B,GAeTC,EAAE,IAAI;AAAA,YACbH,KADa,GACH,KAAKF,KADF,CACbE,KADa;AAGrB,WAAKI,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAEC,KAAK,CAACK,MAAN,CAAaN,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAAjC;AADM,OAAd;AAGD,KArByB;;AAAA,SAuB1BG,wBAvB0B,GAuBCC,QAAQ,IAAI;AACrC,UAAI,KAAKT,KAAL,CAAWE,KAAf,EAAsB;AACpB,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AAED,aAAOC,uBAAuB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAH,GAAoBO,mBAAmB,EAArE;AACD,KA7ByB;AAAA;;AAO1BC,EAAAA,iBAAiB,GAAG;AAAA,sBACMb,QAAQ,EADd;AAAA,UACVc,WADU,aACVA,WADU;;AAGlBA,IAAAA,WAAW,CAAC,CAACC,GAAD,EAAMX,KAAN,KAAgB;AAC1B,WAAKI,QAAL,CAAc;AAAEJ,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KAFU,CAAX;AAGD;;AAkBDY,EAAAA,6BAA6B,CAACJ,mBAAD,EAAsB;AACjD,QAAI,KAAKV,KAAL,CAAWC,IAAf,EAAqB;AACnB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,WAAO,KAAKD,KAAL,CAAWe,mBAAX,GAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjC,GAAmDL,mBAAmB,EAA7E;AACD;;AAEDM,EAAAA,MAAM,GAAG;AAAA,wBACiB,KAAKhB,KADtB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,KADP,eACOA,KADP;AAEP,WACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,MAAM,EAAE,MAAM,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAED,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,MAAM,EAAE,MAAM,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAEC,KAAd;AAAqB,QAAA,cAAc,EAAE,KAAKE,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA/CyB;;AAkD5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Logo from './Logo/Logo';\nimport Users from './Users/UserContainer';\nimport chatInit from '../services/socket';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    user: null,\n    users: [],\n    isRegistrationInProcess: false\n  };\n\n  componentDidMount() {\n    const { getAllUsers } = chatInit();\n\n    getAllUsers((err, users) => {\n      this.setState({ users: users });\n    });\n  }\n\n  setCurrentUser = id => {\n    const { users } = this.state;\n\n    this.setState({\n      user: users.filter(user => user.id === id)\n    });\n  };\n\n  renderUserListOrRedirect = userList => {\n    if (this.state.users) {\n      return <Redirect to='/' />;\n    }\n\n    return isRegistrationInProcess ? <p>LOADING</p> : renderUserSelection();\n  };\n\n  renderUserSelectionOrRedirect(renderUserSelection) {\n    if (this.state.user) {\n      return <Redirect to='/' />;\n    }\n\n    return this.state.isRegisterInProcess ? <p> LOADING</p> : renderUserSelection();\n  }\n\n  render() {\n    const { user, users } = this.state;\n    return (\n      <Switch>\n        <Route path='/' exact render={() => <Logo user={user} />} />\n        <Route path='/users' render={() => <Users users={users} setCurrentUser={this.setCurrentUser} />} />\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}