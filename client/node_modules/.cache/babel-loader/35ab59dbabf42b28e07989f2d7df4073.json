{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/src/components/App.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  body {\\n    color: \", \";\\n    font-family: \", \";\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Main from './Main/Main';\nimport Users from './Users/UserContainer';\nimport Chatroom from './Chatrooms/ChatroomView';\nimport MainLayout from './MainLayout/MainLayout';\nimport chatInit from '../services/socket';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nconst GlobalStyle = createGlobalStyle(_templateObject(), props => props.whiteColor ? 'white' : 'black', props => props.theme.fontFamily);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null,\n      isRegistrationInProcess: false,\n      client: chatInit()\n    };\n\n    this.handleUserRegistration = userName => {\n      const register = this.state.client.register;\n      this.setState({\n        isRegistrationInProcess: true\n      });\n      register(userName, (err, user) => {\n        if (err) return this.setState({\n          user: null\n        });\n        this.setState({\n          isRegistrationInProcess: false,\n          user\n        });\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          user = _this$state.user,\n          client = _this$state.client;\n    return React.createElement(MainLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(Main, {\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/users\",\n      render: props => React.createElement(Users, Object.assign({\n        getAllUsers: client.getAllUsers,\n        register: this.handleUserRegistration\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      to: \"/chatroom/:id\",\n      component: React.createElement(Chatroom, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/components/App.js"],"names":["React","Component","Route","Switch","Main","Users","Chatroom","MainLayout","chatInit","createGlobalStyle","ThemeProvider","GlobalStyle","props","whiteColor","theme","fontFamily","App","state","user","isRegistrationInProcess","client","handleUserRegistration","userName","register","setState","err","render","getAllUsers"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AAEA,OAAOC,QAAP,MAAqB,oBAArB;AAGA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,mBAAjD;AAEA,MAAMC,WAAW,GAAGF,iBAAH,oBAEJG,KAAK,IAAKA,KAAK,CAACC,UAAN,GAAmB,OAAnB,GAA6B,OAFnC,EAGED,KAAK,IAAIA,KAAK,CAACE,KAAN,CAAYC,UAHvB,CAAjB;;AAOA,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BgB,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAE,IADA;AAENC,MAAAA,uBAAuB,EAAE,KAFnB;AAGNC,MAAAA,MAAM,EAAEZ,QAAQ;AAHV,KADkB;;AAAA,SAO1Ba,sBAP0B,GAODC,QAAQ,IAAI;AAAA,YAC3BC,QAD2B,GACd,KAAKN,KAAL,CAAWG,MADG,CAC3BG,QAD2B;AAGnC,WAAKC,QAAL,CAAc;AACZL,QAAAA,uBAAuB,EAAE;AADb,OAAd;AAIAI,MAAAA,QAAQ,CAACD,QAAD,EAAW,CAACG,GAAD,EAAMP,IAAN,KAAe;AAChC,YAAIO,GAAJ,EAAS,OAAO,KAAKD,QAAL,CAAc;AAAEN,UAAAA,IAAI,EAAE;AAAR,SAAd,CAAP;AAET,aAAKM,QAAL,CAAc;AACZL,UAAAA,uBAAuB,EAAE,KADb;AAEZD,UAAAA;AAFY,SAAd;AAID,OAPO,CAAR;AAQD,KAtByB;AAAA;;AAwB1BQ,EAAAA,MAAM,GAAG;AAAA,wBACkB,KAAKT,KADvB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOE,MADP,eACOA,MADP;AAGP,WACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,MAAM,EAAE,MAAM,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,MAAM,EAAEN,KAAK,IACX,oBAAC,KAAD;AAAO,QAAA,WAAW,EAAEQ,MAAM,CAACO,WAA3B;AAAwC,QAAA,QAAQ,EAAE,KAAKN;AAAvD,SAAmFT,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAUE,oBAAC,KAAD;AAAO,MAAA,EAAE,EAAC,eAAV;AAA0B,MAAA,SAAS,EAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF,CADF;AAgBD;;AA3CyB;;AA8C5B,eAAeI,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Main from './Main/Main';\nimport Users from './Users/UserContainer';\nimport Chatroom from './Chatrooms/ChatroomView';\nimport MainLayout from './MainLayout/MainLayout';\n\nimport chatInit from '../services/socket';\n\n\nimport { createGlobalStyle, ThemeProvider } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    color: ${props => (props.whiteColor ? 'white' : 'black')};\n    font-family: ${props => props.theme.fontFamily};\n  }\n`\n\nclass App extends Component {\n  state = {\n    user: null,\n    isRegistrationInProcess: false,\n    client: chatInit()\n  };\n\n  handleUserRegistration = userName => {\n    const { register } = this.state.client;\n\n    this.setState({\n      isRegistrationInProcess: true\n    });\n\n    register(userName, (err, user) => {\n      if (err) return this.setState({ user: null });\n\n      this.setState({\n        isRegistrationInProcess: false,\n        user\n      });\n    });\n  };\n\n  render() {\n    const { user, client } = this.state;\n\n    return (\n      <MainLayout>\n        <Switch>\n          <Route path='/' exact render={() => <Main user={user} />} />\n\n          <Route\n            path='/users'\n            render={props => (\n              <Users getAllUsers={client.getAllUsers} register={this.handleUserRegistration} {...props} />\n            )}\n          />\n\n          <Route to='/chatroom/:id' component={<Chatroom />} />\n        </Switch>\n      </MainLayout>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}