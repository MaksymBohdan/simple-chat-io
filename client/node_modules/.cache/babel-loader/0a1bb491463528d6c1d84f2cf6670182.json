{"ast":null,"code":"var _jsxFileName = \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/src/components/Chat/Chat.js\";\nimport React, { Component } from 'react';\nimport { ChatWrapper, MessageArea } from './styles';\nimport chatInit from '../../services/socket';\n\nclass Chat extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chatHistory: [],\n      message: '',\n      socketClient: null\n    };\n\n    this.onMessageSend = () => {};\n\n    this.onMessageChange = e => this.setState({\n      message: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    const _chatInit = chatInit(),\n          chatConnectionHandler = _chatInit.chatConnectionHandler,\n          sendMessage = _chatInit.sendMessage; // chatConnectionHandler(this.onMessageReceived);\n\n  } // onMessageReceived = () => {\n  //   console.log('message', this.state.message);\n  //   this.setState(prev => ({\n  //     chatHistory: [...prev.chatHistory, this.state.message],\n  //     message: ''\n  //   }));\n  // };\n\n\n  render() {\n    const history = this.props.history;\n    const _this$state = this.state,\n          message = _this$state.message,\n          chatHistory = _this$state.chatHistory;\n    console.log('a', this.props);\n    return React.createElement(ChatWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"dialog\"), React.createElement(\"p\", {\n      onClick: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"back\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, chatHistory.map(message => React.createElement(\"li\", {\n      key: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, message))), React.createElement(MessageArea, {\n      rows: \"1\",\n      onChange: this.onMessageChange,\n      value: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onMessageReceived,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"send message\"));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/components/Chat/Chat.js"],"names":["React","Component","ChatWrapper","MessageArea","chatInit","Chat","state","chatHistory","message","socketClient","onMessageSend","onMessageChange","e","setState","target","value","componentDidMount","chatConnectionHandler","sendMessage","render","history","props","console","log","push","map","onMessageReceived"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,YAAY,EAAE;AAHR,KADmB;;AAAA,SAoB3BC,aApB2B,GAoBX,MAAM,CAAE,CApBG;;AAAA,SAsB3BC,eAtB2B,GAsBTC,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEL,MAAAA,OAAO,EAAEI,CAAC,CAACE,MAAF,CAASC;AAApB,KAAd,CAtBI;AAAA;;AAO3BC,EAAAA,iBAAiB,GAAG;AAAA,sBAC6BZ,QAAQ,EADrC;AAAA,UACVa,qBADU,aACVA,qBADU;AAAA,UACaC,WADb,aACaA,WADb,EAElB;;AACD,GAV0B,CAY3B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAMAC,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,wBAE0B,KAAKd,KAF/B;AAAA,UAECE,OAFD,eAECA,OAFD;AAAA,UAEUD,WAFV,eAEUA,WAFV;AAGPe,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiB,KAAKF,KAAtB;AAEA,WACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,MAAA,OAAO,EAAE,MAAMD,OAAO,CAACI,IAAR,CAAa,GAAb,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjB,WAAW,CAACkB,GAAZ,CAAgBjB,OAAO,IACtB;AAAI,MAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBA,OAAnB,CADD,CADH,CAHF,EAQE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,QAAQ,EAAE,KAAKG,eAArC;AAAsD,MAAA,KAAK,EAAEH,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKkB,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADF;AAeD;;AA5C0B;;AA+C7B,eAAerB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ChatWrapper, MessageArea } from './styles';\n\nimport chatInit from '../../services/socket';\n\nclass Chat extends Component {\n  state = {\n    chatHistory: [],\n    message: '',\n    socketClient: null\n  };\n\n  componentDidMount() {\n    const { chatConnectionHandler, sendMessage } = chatInit();\n    // chatConnectionHandler(this.onMessageReceived);\n  }\n\n  // onMessageReceived = () => {\n  //   console.log('message', this.state.message);\n  //   this.setState(prev => ({\n  //     chatHistory: [...prev.chatHistory, this.state.message],\n  //     message: ''\n  //   }));\n  // };\n\n  onMessageSend = () => {};\n\n  onMessageChange = e => this.setState({ message: e.target.value });\n\n  render() {\n    const { history } = this.props;\n    const { message, chatHistory } = this.state;\n    console.log('a', this.props);\n\n    return (\n      <ChatWrapper>\n        <h1>dialog</h1>\n        <p onClick={() => history.push('/')}>back</p>\n        <ul>\n          {chatHistory.map(message => (\n            <li key={message}>{message}</li>\n          ))}\n        </ul>\n        <MessageArea rows='1' onChange={this.onMessageChange} value={message} />\n        <button type='button' onClick={this.onMessageReceived}>\n          send message\n        </button>\n      </ChatWrapper>\n    );\n  }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}