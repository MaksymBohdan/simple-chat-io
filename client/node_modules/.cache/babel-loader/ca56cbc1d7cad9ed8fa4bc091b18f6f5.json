{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/src/components/Chat/Chat.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 70px;\\n  background-color: rgb(255, 255, 255);\\n  position: absolute;\\n  bottom: 0;\\n  resize: none;\\n  outline: none;\\n  box-sizing: border-box;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { ChatWrapper } from './styles';\nimport styled from 'styled-components';\nimport chatInit from '../../services/socket';\nconst MessageArea = styled.textarea(_templateObject());\n\nclass Chat extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chatHistory: [],\n      message: ''\n    };\n\n    this.onMessageChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const history = this.props.history;\n    const message = this.state.message;\n    return React.createElement(ChatWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"dialog\"), React.createElement(\"p\", {\n      onClick: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"back\"), React.createElement(MessageArea, {\n      rows: \"1\",\n      onChange: c,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/components/Chat/Chat.js"],"names":["React","Component","ChatWrapper","styled","chatInit","MessageArea","textarea","Chat","state","chatHistory","message","onMessageChange","e","setState","input","target","value","render","history","props","push","c"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,UAA5B;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,MAAMC,WAAW,GAAGF,MAAM,CAACG,QAAV,mBAAjB;;AAUA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BO,KAD2B,GACnB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,OAAO,EAAE;AAFH,KADmB;;AAAA,SAkB3BC,eAlB2B,GAkBTC,CAAC,IAAI;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASC;AADJ,OAAd;AAGD,KAtB0B;AAAA;;AAwB3BC,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKC,KADlB,CACCD,OADD;AAAA,UAECR,OAFD,GAEa,KAAKF,KAFlB,CAECE,OAFD;AAIP,WACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,MAAA,OAAO,EAAE,MAAMQ,OAAO,CAACE,IAAR,CAAa,GAAb,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAIE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,QAAQ,EAAEC,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD;;AApC0B;;AAuC7B,eAAed,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ChatWrapper } from './styles';\n\nimport styled from 'styled-components';\n\nimport chatInit from '../../services/socket';\n\nconst MessageArea = styled.textarea`\n  width: 100%;\n  height: 70px;\n  background-color: rgb(255, 255, 255);\n  position: absolute;\n  bottom: 0;\n  resize: none;\n  outline: none;\n  box-sizing: border-box;\n`;\nclass Chat extends Component {\n  state = {\n    chatHistory: [],\n    message: ''\n  };\n\n  // componentDidMount() {\n  //   const { chatConnectionHandler } = chatInit();\n  //   // chatConnectionHandler(this.onMessageReceived);\n  // }\n\n  // onMessageReceived = message => {\n  //   console.log('message', message);\n  //   this.setState(prev => ({\n  //     chatHistory: [...prev.chatHistory, message]\n  //   }));\n  // };\n\n  onMessageChange = e => {\n    this.setState({\n      input: e.target.value\n    });\n  };\n\n  render() {\n    const { history } = this.props;\n    const { message } = this.state;\n\n    return (\n      <ChatWrapper>\n        <h1>dialog</h1>\n        <p onClick={() => history.push('/')}>back</p>\n\n        <MessageArea rows='1' onChange={c} />\n      </ChatWrapper>\n    );\n  }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}