{"ast":null,"code":"var _jsxFileName = \"/home/maksym/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/gitHub/simple-chat-io/client/src/components/Chat/Chat.js\";\nimport React, { Component } from 'react';\nimport { ChatWrapper, MessageArea } from './styles';\nimport chatInit from '../../services/socket';\n\nclass Chat extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      chatHistory: [],\n      message: ''\n    };\n\n    this.updateChatHistory = msg => {\n      this.setState({\n        chatHistory: this.state.chatHistory.concat(msg)\n      });\n    };\n\n    this.joinClientToChat = () => {\n      const _chatInit = chatInit(),\n            joinClientToChat = _chatInit.joinClientToChat;\n\n      const params = this.props.match.params;\n      joinClientToChat = (err, params.roomname);\n    };\n\n    this.onMessageSend = () => {\n      const _this$state = this.state,\n            socketClient = _this$state.socketClient,\n            message = _this$state.message;\n      const _this$props = this.props,\n            params = _this$props.match.params,\n            user = _this$props.user;\n      socketClient.sendMessage({\n        roomname: params.roomname,\n        message,\n        userId: user.id\n      }, () => null);\n      this.setState({\n        message: ''\n      });\n    };\n\n    this.onMessageChange = e => this.setState({\n      message: e.target.value\n    });\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const history = this.props.history;\n    const _this$state2 = this.state,\n          message = _this$state2.message,\n          chatHistory = _this$state2.chatHistory;\n    return React.createElement(ChatWrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"dialog\"), React.createElement(\"p\", {\n      onClick: () => history.push('/'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"back\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, chatHistory.map(message => React.createElement(\"li\", {\n      key: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, message))), React.createElement(MessageArea, {\n      rows: \"1\",\n      onChange: this.onMessageChange,\n      value: message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.onMessageSend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"send message\"));\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/maksym/Рабочий стол/gitHub/simple-chat-io/client/src/components/Chat/Chat.js"],"names":["React","Component","ChatWrapper","MessageArea","chatInit","Chat","state","chatHistory","message","updateChatHistory","msg","setState","concat","joinClientToChat","params","props","match","err","roomname","onMessageSend","socketClient","user","sendMessage","userId","id","onMessageChange","e","target","value","componentDidMount","render","history","push","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,UAAzC;AAEA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACnB;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,OAAO,EAAE;AAFH,KADmB;;AAAA,SAQ3BC,iBAR2B,GAQPC,GAAG,IAAI;AACzB,WAAKC,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAE,KAAKD,KAAL,CAAWC,WAAX,CAAuBK,MAAvB,CAA8BF,GAA9B;AADD,OAAd;AAGD,KAZ0B;;AAAA,SAc3BG,gBAd2B,GAcR,MAAM;AAAA,wBACMT,QAAQ,EADd;AAAA,YACfS,gBADe,aACfA,gBADe;;AAAA,YAGZC,MAHY,GAInB,KAAKC,KAJc,CAGrBC,KAHqB,CAGZF,MAHY;AAMvBD,MAAAA,gBAAgB,IAAII,GAAG,EAAEH,MAAM,CAACI,QAAhB,CAAhB;AACD,KArB0B;;AAAA,SAuB3BC,aAvB2B,GAuBX,MAAM;AAAA,0BACc,KAAKb,KADnB;AAAA,YACZc,YADY,eACZA,YADY;AAAA,YACEZ,OADF,eACEA,OADF;AAAA,0BAKhB,KAAKO,KALW;AAAA,YAGTD,MAHS,eAGlBE,KAHkB,CAGTF,MAHS;AAAA,YAIlBO,IAJkB,eAIlBA,IAJkB;AAOpBD,MAAAA,YAAY,CAACE,WAAb,CAAyB;AAAEJ,QAAAA,QAAQ,EAAEJ,MAAM,CAACI,QAAnB;AAA6BV,QAAAA,OAA7B;AAAsCe,QAAAA,MAAM,EAAEF,IAAI,CAACG;AAAnD,OAAzB,EAAkF,MAAM,IAAxF;AAEA,WAAKb,QAAL,CAAc;AACZH,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,KAnC0B;;AAAA,SAqC3BiB,eArC2B,GAqCTC,CAAC,IAAI,KAAKf,QAAL,CAAc;AAAEH,MAAAA,OAAO,EAAEkB,CAAC,CAACC,MAAF,CAASC;AAApB,KAAd,CArCI;AAAA;;AAM3BC,EAAAA,iBAAiB,GAAG,CAAE;;AAiCtBC,EAAAA,MAAM,GAAG;AAAA,UACCC,OADD,GACa,KAAKhB,KADlB,CACCgB,OADD;AAAA,yBAE0B,KAAKzB,KAF/B;AAAA,UAECE,OAFD,gBAECA,OAFD;AAAA,UAEUD,WAFV,gBAEUA,WAFV;AAIP,WACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAG,MAAA,OAAO,EAAE,MAAMwB,OAAO,CAACC,IAAR,CAAa,GAAb,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGzB,WAAW,CAAC0B,GAAZ,CAAgBzB,OAAO,IACtB;AAAI,MAAA,GAAG,EAAEA,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBA,OAAnB,CADD,CADH,CAHF,EAQE,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,QAAQ,EAAE,KAAKiB,eAArC;AAAsD,MAAA,KAAK,EAAEjB,OAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,KAAKW,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBATF,CADF;AAeD;;AA1D0B;;AA6D7B,eAAed,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ChatWrapper, MessageArea } from './styles';\n\nimport chatInit from '../../services/socket';\n\nclass Chat extends Component {\n  state = {\n    chatHistory: [],\n    message: ''\n  };\n\n  componentDidMount() {}\n\n  updateChatHistory = msg => {\n    this.setState({\n      chatHistory: this.state.chatHistory.concat(msg)\n    });\n  };\n\n  joinClientToChat = () => {\n    const { joinClientToChat } = chatInit();\n    const {\n      match: { params }\n    } = this.props;\n\n    joinClientToChat = (err, params.roomname);\n  };\n\n  onMessageSend = () => {\n    const { socketClient, message } = this.state;\n    const {\n      match: { params },\n      user\n    } = this.props;\n\n    socketClient.sendMessage({ roomname: params.roomname, message, userId: user.id }, () => null);\n\n    this.setState({\n      message: ''\n    });\n  };\n\n  onMessageChange = e => this.setState({ message: e.target.value });\n\n  render() {\n    const { history } = this.props;\n    const { message, chatHistory } = this.state;\n\n    return (\n      <ChatWrapper>\n        <h1>dialog</h1>\n        <p onClick={() => history.push('/')}>back</p>\n        <ul>\n          {chatHistory.map(message => (\n            <li key={message}>{message}</li>\n          ))}\n        </ul>\n        <MessageArea rows='1' onChange={this.onMessageChange} value={message} />\n        <button type='button' onClick={this.onMessageSend}>\n          send message\n        </button>\n      </ChatWrapper>\n    );\n  }\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}